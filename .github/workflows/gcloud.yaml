name: Build and Deploy to Cloud Run

permissions:
  id-token: write
  contents: read

on:
  push:
    branches: [ "main" ]

env:
  GOOGLE_PROJECT_ID: 'es-tic-tac-toe'
  GOOGLE_PROJECT_NUMBER: '870874262403'
  ARTIFACT_REPOSITORY_NAME: 'tic-tac-toe'
  ARTIFACT_PACKAGE_NAME: 'tic-tac-toe'
  REGION: 'europe-west4'
  CLOUD_RUN_SERVICE: 'tic-tac-toe-service'
  WORKLOAD_IDENTITY_PROVIDER: "projects/870874262403/locations/global/workloadIdentityPools/github/providers/github-provider"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Image Tag
        id: vars
        run: echo "docker_tag=${{ env.REGION }}-docker.pkg.dev/${{ env.GOOGLE_PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY_NAME }}/${{ env.ARTIFACT_PACKAGE_NAME }}:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: 'Authenticate to Google Cloud'
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          project_id: '${{ env.GOOGLE_PROJECT_ID }}'
          create_credentials_file: 'false'

      - uses: actions/setup-java@v4
        with:
          distribution: 'graalvm' # See 'Supported distributions' for available options
          java-version: '24'

      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.auth_token }}'
          registry: '${{ env.REGION }}-docker.pkg.dev'

      - name: Build and Push Native Image
        run: |
          DOCKER_TAG='${{ steps.vars.outputs.docker_tag }}'
          ./mvnw spring-boot:build-image \
            --no-transfer-progress \
            -Dspring.profiles.active=native \
            -Dimage.platform=linux/amd64 \
            -Dimage.name="$DOCKER_TAG" \
            -Dimage.publish=false
          docker push "${DOCKER_TAG}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          project_id: '${{ env.GOOGLE_PROJECT_ID }}'
          service: '${{ env.CLOUD_RUN_SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ steps.vars.outputs.docker_tag }}'

      - name: Print URL
        run: |-
          echo "Service URL: ${{ steps.deploy.outputs.url }}"